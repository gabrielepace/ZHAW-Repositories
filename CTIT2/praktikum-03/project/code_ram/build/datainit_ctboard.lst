


ARM Macro Assembler    Page 1 


    1 00000000         ;* -----------------------------------------------------
                       -------------
    2 00000000         ;* --  _____       ______  _____                        
                                   -
    3 00000000         ;* -- |_   _|     |  ____|/ ____|                       
                                   -
    4 00000000         ;* --   | |  _ __ | |__  | (___    Institute of Embedded
                        Systems    -
    5 00000000         ;* --   | | | '_ \|  __|  \___ \   Zurich University of 
                                   -
    6 00000000         ;* --  _| |_| | | | |____ ____) |  Applied Sciences     
                                   -
    7 00000000         ;* -- |_____|_| |_|______|_____/   8401 Winterthur, Swit
                       zerland     -
    8 00000000         ;* -----------------------------------------------------
                       -------------
    9 00000000         ;* --
   10 00000000         ;* -- Project     : CT Board - Cortex M4
   11 00000000         ;* -- Description : Data Segment initialisation.
   12 00000000         ;* -- 
   13 00000000         ;* -- $Id$
   14 00000000         ;* -----------------------------------------------------
                       -------------
   15 00000000         
   16 00000000         
   17 00000000         ; ------------------------------------------------------
                       -------------
   18 00000000         ; -- __Main
   19 00000000         ; ------------------------------------------------------
                       ------------- 
   20 00000000         
   21 00000000                 AREA             |.text|, CODE, READONLY
   22 00000000         
   23 00000000                 IMPORT           main
   24 00000000         
   25 00000000                 EXPORT           __main
   26 00000000         
   27 00000000         __main  PROC
   28 00000000         
   29 00000000         ; initialize RW and ZI data - this includes heap and sta
                       ck for the -ro=... -rw=... -entry=... linking cmd args..
                       .
   30 00000000                 IMPORT           |Image$$RO$$Limit| [WEAK]
   31 00000000                 IMPORT           |Image$$RW$$Base|  [WEAK]
   32 00000000                 IMPORT           |Image$$ZI$$Base|  [WEAK]
   33 00000000                 IMPORT           |Image$$ZI$$Limit| [WEAK]
   34 00000000         ; ...or from auto generated scatter file. Needs linker o
                       ption: --diag_suppress 6314
   35 00000000                 IMPORT           |Image$$ER_IROM1$$Limit|     [W
EAK]
   36 00000000                 IMPORT           |Image$$RW_IRAM1$$Base|      [W
EAK]
   37 00000000                 IMPORT           |Image$$RW_IRAM1$$ZI$$Base|  [W
EAK]
   38 00000000                 IMPORT           |Image$$RW_IRAM1$$ZI$$Limit| [W
EAK]
   39 00000000         ; import stack parameter
   40 00000000                 IMPORT           Stack_Size  [WEAK]
   41 00000000                 IMPORT           Stack_Mem   [WEAK]



ARM Macro Assembler    Page 2 


   42 00000000         
   43 00000000         ; switch between command line generated regions and auto
                        scatter file generated regions
   44 00000000 4912            LDR              R1, =|Image$$RO$$Limit|
   45 00000002 2900            CMP              R1,#0
   46 00000004 D004            BEQ              ScatterFileSymbols
   47 00000006         CommandLineSymbols
   48 00000006 4A12            LDR              R2, =|Image$$RW$$Base| ; start 
                                                            of the RW data in R
                                                            AM
   49 00000008 4B12            LDR              R3, =|Image$$ZI$$Base| ; end of
                                                             the RW data in RAM
                                                            
   50 0000000A 461D            MOV              R5, R3      ; start of zero ini
                                                            tialized data
   51 0000000C 4E12            LDR              R6, =|Image$$ZI$$Limit| ; end o
                                                            f zero initialized 
                                                            data 
   52 0000000E E009            B                CondRWLoop
   53 00000010         ScatterFileSymbols
   54 00000010 4912            LDR              R1, =|Image$$ER_IROM1$$Limit| ;
                                                             start of flashed i
                                                            nitial RW data
   55 00000012 4A13            LDR              R2, =|Image$$RW_IRAM1$$Base| ; 
                                                            start of the RW dat
                                                            a in RAM
   56 00000014 4B13            LDR              R3, =|Image$$RW_IRAM1$$ZI$$Base
| 
                                                            ; end of the RW dat
                                                            a in RAM
   57 00000016 461D            MOV              R5, R3      ; start of zero ini
                                                            tialized data
   58 00000018 4E13            LDR              R6, =|Image$$RW_IRAM1$$ZI$$Limi
t| 
                                                            ; end of zero initi
                                                            alized data 
   59 0000001A E003            B                CondRWLoop
   60 0000001C         
   61 0000001C         ; init non-zero data
   62 0000001C 680C    LoopRWCopy
                               LDR              R4, [R1]
   63 0000001E 6014            STR              R4, [R2]
   64 00000020 1D09            ADDS             R1, R1, #4
   65 00000022 1D12            ADDS             R2, R2, #4
   66 00000024 429A    CondRWLoop
                               CMP              R2, R3
   67 00000026 D1F9            BNE              LoopRWCopy
   68 00000028         
   69 00000028         ; init zero-initialized data
   70 00000028 462A            MOV              R2, R5
   71 0000002A 4633            MOV              R3, R6
   72 0000002C 2400            MOVS             R4, #0
   73 0000002E E001            B                CondZILoop
   74 00000030 6014    LoopZICopy
                               STR              R4, [R2]
   75 00000032 1D12            ADDS             R2, R2, #4
   76 00000034 429A    CondZILoop
                               CMP              R2, R3
   77 00000036 D1FB            BNE              LoopZICopy



ARM Macro Assembler    Page 3 


   78 00000038         
   79 00000038         ; fingerprint stack section
   80 00000038 480C            LDR              R0, =Stack_Mem
   81 0000003A 490D            LDR              R1, =Stack_Size
   82 0000003C 4A0D            LDR              R2, =0xEFBEADDE ; stack fingerp
                                                            rint (little endian
                                                            !)
   83 0000003E 6002    LoopStack
                               STR              R2, [R0]
   84 00000040 1D00            ADDS             R0, R0, #4
   85 00000042 3904            SUBS             R1, #4
   86 00000044 D1FB            BNE              LoopStack
   87 00000046         
   88 00000046         ; go to the user main function                
   89 00000046 480C            LDR              R0, =main
   90 00000048 4700            BX               R0
   91 0000004A                 ENDP
   92 0000004A         
   93 0000004A         
   94 0000004A         ; ------------------------------------------------------
                       -------------
   95 0000004A         ; -- End of file
   96 0000004A         ; ------------------------------------------------------
                       -------------  
   97 0000004A         
   98 0000004A 00 00           ALIGN
   99 0000004C         
  100 0000004C                 END
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              EFBEADDE 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0 --apcs=interw
ork --depend=.\build\datainit_ctboard.d -o.\build\datainit_ctboard.o -I.\RTE\_T
arget_1 -IC:\Keil_v5\ARM\PACK\InES\CTBoard14_DFP\4.0.2\Device\Include -IC:\Keil
_v5\ARM\PACK\InES\CTBoard14_DFP\4.0.2\Device\Include\m0 -IC:\Keil_v5\ARM\PACK\I
nES\CTBoard14_DFP\4.0.2\HAL\Include -IC:\Keil_v5\ARM\CMSIS\Include --predefine=
"__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526" --predefine="_RTE_ SET
A 1" --list=.\build\datainit_ctboard.lst RTE\Device\CT_Board_HS14_M0\datainit_c
tboard.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 21 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
   Uses
      None
Comment: .text unused
CommandLineSymbols 00000006

Symbol: CommandLineSymbols
   Definitions
      At line 47 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
   Uses
      None
Comment: CommandLineSymbols unused
CondRWLoop 00000024

Symbol: CondRWLoop
   Definitions
      At line 66 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
   Uses
      At line 52 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
      At line 59 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s

CondZILoop 00000034

Symbol: CondZILoop
   Definitions
      At line 76 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
   Uses
      At line 73 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
Comment: CondZILoop used once
LoopRWCopy 0000001C

Symbol: LoopRWCopy
   Definitions
      At line 62 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
   Uses
      At line 67 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
Comment: LoopRWCopy used once
LoopStack 0000003E

Symbol: LoopStack
   Definitions
      At line 83 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
   Uses
      At line 86 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
Comment: LoopStack used once
LoopZICopy 00000030

Symbol: LoopZICopy
   Definitions
      At line 74 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
   Uses
      At line 77 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
Comment: LoopZICopy used once
ScatterFileSymbols 00000010




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: ScatterFileSymbols
   Definitions
      At line 53 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
   Uses
      At line 46 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
Comment: ScatterFileSymbols used once
__main 00000000

Symbol: __main
   Definitions
      At line 27 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
   Uses
      At line 25 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
Comment: __main used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Image$$ER_IROM1$$Limit 00000000

Symbol: Image$$ER_IROM1$$Limit
   Definitions
      At line 35 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
   Uses
      At line 54 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
Comment: Image$$ER_IROM1$$Limit used once
Image$$RO$$Limit 00000000

Symbol: Image$$RO$$Limit
   Definitions
      At line 30 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
   Uses
      At line 44 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
Comment: Image$$RO$$Limit used once
Image$$RW$$Base 00000000

Symbol: Image$$RW$$Base
   Definitions
      At line 31 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
   Uses
      At line 48 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
Comment: Image$$RW$$Base used once
Image$$RW_IRAM1$$Base 00000000

Symbol: Image$$RW_IRAM1$$Base
   Definitions
      At line 36 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
   Uses
      At line 55 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
Comment: Image$$RW_IRAM1$$Base used once
Image$$RW_IRAM1$$ZI$$Base 00000000

Symbol: Image$$RW_IRAM1$$ZI$$Base
   Definitions
      At line 37 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
   Uses
      At line 56 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
Comment: Image$$RW_IRAM1$$ZI$$Base used once
Image$$RW_IRAM1$$ZI$$Limit 00000000

Symbol: Image$$RW_IRAM1$$ZI$$Limit
   Definitions
      At line 38 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
   Uses
      At line 58 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
Comment: Image$$RW_IRAM1$$ZI$$Limit used once
Image$$ZI$$Base 00000000

Symbol: Image$$ZI$$Base
   Definitions
      At line 32 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
   Uses
      At line 49 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
Comment: Image$$ZI$$Base used once
Image$$ZI$$Limit 00000000

Symbol: Image$$ZI$$Limit



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 33 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
   Uses
      At line 51 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
Comment: Image$$ZI$$Limit used once
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 41 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
   Uses
      At line 80 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
Comment: Stack_Mem used once
Stack_Size 00000000

Symbol: Stack_Size
   Definitions
      At line 40 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
   Uses
      At line 81 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
Comment: Stack_Size used once
main 00000000

Symbol: main
   Definitions
      At line 23 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
   Uses
      At line 89 in file RTE\Device\CT_Board_HS14_M0\datainit_ctboard.s
Comment: main used once
11 symbols
355 symbols in table
